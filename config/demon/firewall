#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#
#########################################################
# Name: firewall (script)
# Porpose: firewall service daemon for linux system
# Writer: Gianluca Pernigoto <jeanlucperni@gmail.com>
# Copyright: (c) 2013-2015 Gianluca Pernigoto <jeanlucperni@gmail.com>
# license: GPL3
# Version: (V0.12) Tuesday, 14 August 2012
# Rev (v0.13) 04/02/2015
#########################################################

"""
This daemon is running automatically during the system startup and if called 
with some command arg, but However, for be running, it must have execution 
permissions .

It must be locate in /etc/init.d or /etc/rc.d, this depend what init-systems
is used: System V or BSD style .
"""

VERSION = '0.13'

USAGE = ("\033[1m\nUsage: pyfirewall "
		 "{reload|restart|start|stop|block|status|settings|version}\033[0m\n")

pathDB = ('/etc/pyfirewall/private')
pathrule = ('/etc/pyfirewall')

import os
import subprocess
import sys

from pyfirewall_pack.settings import Main_Menu
from pyfirewall_pack.load_custom_rules import load_custom
from pyfirewall_pack.conf_parser import parser

if os.getuid() != 0:
	print "\033[31;1mPermission denied!\033[0m You are not root"
	sys.exit(1)
	
	
	
def start():
	"""
	During the Gnu/Linux OS startup, this is executed default.
	Also, it is used like pyfirewall command argument from user
	administrator
	"""
	print "\033[32;1mAttivazione Firewall:\033[0m"
	
	output_parser = parser(pathrule)
	
	starting = output_parser[0]
	interfaces = output_parser[1]
		
	try:
		
		subprocess.check_call('%s/%s %s' % (pathrule, starting, interfaces), 
																shell=True)
		
	except subprocess.CalledProcessError:
		
		sys.exit("\033[31;1m[ERROR]\033[0m subprocess.CalledProcessError: "
										"firewall daemon fail on 'start'")
	
	load_custom(pathDB) # It run the need where are applied to all settings
	
	print "\033[32;1m...[OK]\033[0m"
	
def stop():
	"""
	This can executed when Gnu/Linux OS it has an shutdown or an reboot .
	Note that in some OS maybe is need to add the following lines to 
	/etc/rc.d/rc.local_shutdown:
	
	# Stop pyfirewall
	if [ -x /etc/rc.d/rc.firewall ]; then
	  /etc/rc.d/rc.firewall stop
	fi
	"""
	print "\033[31;1mDisattivazione Firewall:\033[0m"
	
	try:
		
		subprocess.check_call('%s/stop stop' % (pathrule), shell=True)
		
	except subprocess.CalledProcessError:
		
		sys.exit("\033[31;1m[ERROR]\033[0m subprocess.CalledProcessError: "
											"firewall daemon fail on 'stop'")
	
	print "\033[31;1m...[OK]\033[0m"
	
########################################################## end functions
	
if len(sys.argv) == 1:
	
	sys.exit(USAGE)

if len(sys.argv) == 2: 

	if sys.argv[1] == "restart" or sys.argv[1] == "reload":
		
		stop()
		
		start()
		
		sys.exit()
		
	elif sys.argv[1] == "start":
		
		start()
		
		sys.exit()
		
	elif sys.argv[1] == "stop":
		
		stop()
		
		sys.exit()
		
	elif sys.argv[1] == "block":
		"""
		WARNING: This prevents all internet connections
		See start script for explanation
		"""
		print "\033[31;1mImposto blocco globale:\033[0m"
		
		try:
		
			subprocess.check_call('%s/block_network block' % (pathrule), shell=True)
		
		except subprocess.CalledProcessError:
			
			sys.exit("\033[31;1m[ERROR]\033[0m subprocess.CalledProcessError: "
											"firewall daemon fail on 'block'")
		
		print "\033[31;1m...[OK]\033[0m"
		
		sys.exit()
		
		
	elif sys.argv[1] == "status":
		"""
		Shows the formatted output of the command > iptables -nvL
		"""
		print "\033[34;1m============================================\033[0m"
		print "\033[36m"
		subprocess.call(['iptables', '-nvL'])
		#print "check_call('iptables -nvL', shell=True)"
		print ""
		print "\033[34;1m============================================\033[0m"
		sys.exit()
		
		
	elif sys.argv[1] == "settings":
		
		opt = Main_Menu(pathDB)
		
		if r.outPut != None:
			subprocess.check_call('iptables %s' % opt.outPut, shell=True)
			#print 'test 1: %s' % opt.outPut
			
		if r.outPut2 != None:
			subprocess.check_call('iptables %s' % opt.outPut2, shell=True)
			#print 'test 2: %s' % opt.outPut2
		
		sys.exit()
		
		
	elif sys.argv[1] == "version" or sys.argv[1] == "-v":
		
		print ("\npyfirewall: Version %s date 04/02/2015 (C) 2015 Gianluca "
									"Pernigotto.\n" % VERSION)
		
		sys.exit()
		
		
	else:
		
		sys.exit(USAGE)

if len(sys.argv) > 2: 
	
	print "\033[1mIl programma accetta solo un argomento alla volta;\033[0m"
	
	sys.exit(USAGE)
	
sys.exit()
