#!/bin/bash
#
# /etc/pyfirewall/0.12/rules_single_interface.conf 
#
# VERSION: (Ver.0.12) Tuesday, 14 August 2012
# DESCRIPTION: configurator rules list for single interface
# 
# Inspired to Simple Stateful Firewall:
# "https://wiki.archlinux.org/index.php/Simple_stateful_firewall"
#
# AUTHOR: Gianluca Pernigotto <jeanlucperni@gmail.com>
#
# The content iptables rules in this file are set for desktop 
# use and will concern your personal firewall.
# Edit this file for custom use, for add your personal rules. 
# The following rules and instructions are secure way for base
# start with any net interfaces. Also, You can setting your list
# of specific interfaces by editing "/etc/pyfirewall/0.12/iface.conf".

if [ $(id -u) -ne 0 ]; then
        echo -e "\nPermission denied\n"
        exit 1
fi

IFACE=$*
 
ipt=`which iptables`
mpb=`which modprobe`




	#################################
        # Caricamento Moduli del Kernel #
        #################################
	$mpb ip_tables
	$mpb iptable_filter
	$mpb iptable_nat
	$mpb ip_conntrack
	$mpb ip_conntrack_ftp
	$mpb ip_nat_ftp
	$mpb ipt_LOG
	$mpb ipt_MARK
	$mpb ipt_MASQUERADE
	$mpb ipt_REDIRECT
	$mpb ipt_REJECT
	$mpb ipt_TOS
	$mpb ipt_limit
	$mpb ipt_mac
	$mpb ipt_mark
	$mpb ipt_multiport
	$mpb ipt_state
	$mpb ipt_tos
	$mpb iptable_mangle
		
	############################
        # Reset delle impostazioni #
        ############################		
	$ipt -t nat -F
        $ipt -t nat -X
        $ipt -t nat -Z

        $ipt -t mangle -F
        $ipt -t mangle -X
        $ipt -t mangle -Z

        $ipt -F
        $ipt -X
        $ipt -Z
		
	##############################
	# Creating necessary chains 
	##############################
	$ipt -N TCP
	$ipt -N UDP
		
	################################
        # Impostazione Policy standard #
        ################################
	$ipt -P INPUT   DROP
	$ipt -P FORWARD DROP
	$ipt -P OUTPUT  ACCEPT

# You can starting here for editing the following list: 
		
	#############################################################################
	# Abilitazione traffico in entrata solo se relativo a pacchetti in risposta #
	#############################################################################
	$ipt -A INPUT $IFACE -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

	#################################
	# Abilitazione traffico interno #
	#################################
	$ipt -A INPUT -i lo -j ACCEPT

	#################################
	# The third rule will drop all traffic with an "INVALID" state match. Traffic can
	# fall into four "state" categories: NEW, ESTABLISHED, RELATED or INVALID
	#################################
	$ipt -A INPUT $IFACE -m conntrack --ctstate INVALID -j DROP
    

	#############################################################################
	# The next rule will accept all new incoming ICMP echo requests, also known as pings.
	#############################################################################
	$ipt -A INPUT $IFACE -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT

	#############################################################################
	# Now we append the OPEN chains to INPUT chain to handle all new incoming connections
	#############################################################################
	$ipt -A INPUT $IFACE -p udp -m conntrack --ctstate NEW -j UDP
	$ipt -A INPUT $IFACE -p tcp --syn -m conntrack --ctstate NEW -j TCP

	#############################################################################
	# We reject TCP connections with TCP RST packets and UDP streams with ICMP port 
	# unreachable messages if the ports are not opened
	#############################################################################
	$ipt -A INPUT $IFACE -p udp -j REJECT --reject-with icmp-port-unreachable
	$ipt -A INPUT $IFACE -p tcp -j REJECT --reject-with tcp-rst

	#############################################################################
	# For other protocols, we add a final rule to the INPUT chain to reject all remaining
	# incoming traffic with icmp protocol unreachable messages. This imitates Linux's default behavior. 
	#############################################################################
	$ipt -A INPUT $IFACE -j REJECT --reject-with icmp-proto-unreachable


## THE OPEN CHAINS ( this can set direct from program 'pyfirewall setting' option') ##
	#############################################################################
	# Opening ports to incoming connections for server (decommentare solo se necessario)
	############################################################################# 
	#$ipt -A TCP -p tcp --dport 80 -j ACCEPT # > To accept incoming TCP connections on port 80 for a web server: 
	#$ipt -A TCP -p tcp --dport 22 -j DROP # > To allow remote SSH connections (on port 22): 
	#$ipt -A UDP -p udp --dport 53 -j ACCEPT # > To accept incoming UDP streams on port 53 for a DNS server: 


	##################################################
	# Apertura porte per Torrent (decommentare solo se necessario)
	##################################################
	#$ipt -A TCP -p tcp --dport 59162 -j DROP
	#$ipt -A UDP -p udp --dport 59162 -j DROP

	#######################
	# Apertura porte aMule (decommentare solo se necessario)
	########################
	 # $ipt -A TCP -p tcp --dport 4662 -j ACCEPT
	 # $ipt -A UDP -p udp --dport 4672 -j ACCEPT

	#######################
	# Apertura porte Msn  (decommentare solo se necessario)
	#######################
	# $ipt -A TCP -p tcp --dport 6891 -j ACCEPT
		

	##############################
	# Contro attacchi hacker #
	##############################
	# Protection against spoofing attacks
	$ipt -I INPUT ! -i lo -s 127.0.0.0/8 -j DROP
		

## "HIDE" YOUR COMPUTER  ##
	# Block Ping Request
	$ipt -A INPUT $IFACE -p icmp --icmp-type echo-request -m limit --limit 30/min --limit-burst 8 -j ACCEPT
	$ipt -A INPUT $IFACE -p icmp --icmp-type echo-request -j DROP
	# SYN scans:	
	$ipt -I TCP $IFACE -p tcp -m recent --update --seconds 60 --name TCP-PORTSCAN -j REJECT --reject-with tcp-rst
	$ipt -D INPUT $IFACE -p tcp -j REJECT --reject-with tcp-rst
	$ipt -A INPUT $IFACE -p tcp -m recent --set --name TCP-PORTSCAN -j REJECT --reject-with tcp-rst
	# UDP Scans:	
	$ipt -I UDP $IFACE -p udp -m recent --update --seconds 60 --name UDP-PORTSCAN -j REJECT --reject-with port-unreach
	$ipt -D INPUT $IFACE -p udp -j REJECT --reject-with icmp-port-unreach
	$ipt -A INPUT $IFACE -p udp -m recent --set --name UDP-PORTSCAN -j REJECT --reject-with icmp-port-unreach
	exit 0

 



